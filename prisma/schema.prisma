generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id      String    @id @default(uuid())
  created DateTime  @default(now())
  handle  String    @unique
  Profile Profile[]
  Social  Social[]
  Wallet  Wallet[]
}

model Profile {
  userId     String   @id @default(uuid())
  created    DateTime @default(now())
  theme      String? // Optional field
  background String? // Optional field
  image      String? // Optional field
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("profiles")
}

model Social {
  id       String   @id @default(uuid())
  created  DateTime @default(now())
  social   String? // Optional field
  platform String? // Optional field
  userId   String?  @map("userid") // Optional, maps to the 'userid' column, allowing nulls
  user     User?    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("socials")
}

model Wallet {
  address String    @id
  network String? // Optional field
  userId  String?   @map("userid") // Optional, maps to the 'userid' column, allowing nulls
  created DateTime? @default(now()) // Assuming the creation timestamp might be needed, even if null in the original definition
  user    User?     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("wallets")
}